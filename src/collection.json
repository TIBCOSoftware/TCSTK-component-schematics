// By default, collection.json is a Loose-format JSON5 format, which means it's loaded using a
// special loader and you can use comments, as well as single quotes or no-quotes for standard
// JavaScript identifiers.
// Note that this is only true for collection.json and it depends on the tooling itself.
// We read packageORG.json using a require() call, which is standard JSON.
{
  // This is just to indicate to your IDE that there is a schema for collection.json.
  "$schema": "./node_modules/@angular-devkit/schematics/collection-schema.json",

  // Schematics are listed as a map of schematicName => schematicDescription.
  // Each description contains a description field which is required, a factory reference,
  // an extends field and a schema reference.
  // The extends field points to another schematic (either in the same collection or a
  // separate collection using the format collectionName:schematicName).
  // The factory is required, except when using the extends field. Then the factory can
  // overwrite the extended schematic factory.
  "schematics": {
    "case-cockpit": {
      "description": "New Custom Case Cockpit.",
      "factory": "./case-cockpit",
      "schema": "./case-cockpit/schema.json"
    },"home-cockpit": {
      "description": "New Custom Home Cockpit.",
      "factory": "./home-cockpit",
      "schema": "./home-cockpit/schema.json"
    },"custom-form-creator": {
      "description": "New Custom Form (Creator) .",
      "factory": "./custom-form-creator",
      "schema": "./custom-form-creator/schema.json"
    },"custom-form-action": {
      "description": "New Custom Form (Action) .",
      "factory": "./custom-form-action",
      "schema": "./custom-form-action/schema.json"
    },"custom-form-casedata": {
      "description": "New Custom Form (Case Data) .",
      "factory": "./custom-form-casedata",
      "schema": "./custom-form-casedata/schema.json"
    }
  }
}
